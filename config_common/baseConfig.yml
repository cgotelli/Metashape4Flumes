load_project: "" #"C:/Users/EPFL-LHE/Documents/GitHub/Metashape-BulkProcess/TestFiles/99_Results/test01/halle0001_20220207T1044.psx"

multispectral: False # Is this a multispectral photo set? If RGB, set to False.

# Path for exports (e.g., points, DSM, orthomosaic) and processing log. Will be created if does not exist.
# output_path: "D:/SfM/PROCESSED/output"

# Path to save Metashape project file (.psx). Will be created if does not exist
# project_path: "D:/SfM/PROCESSED/project_files"

# The identifier for the run. Will be used in naming output files. Recommended to include a photoset name and processing parameter set name.
run_name: "halle_resolutionTest"

# CRS EPSG code that project outputs should be in (projection should be in meter units and intended for the project area)
project_crs: 'LOCAL_CS["Local Coordinates (m)",LOCAL_DATUM["Local Datum",0],UNIT["metre",1,AUTHORITY["EPSG","9001"]]]' # 26910 is UTM 10N

subdivide_task: True # Enable metashape "fine-level task subdivision". Recommended: True 

#### Processing parameters:
## Steps can be run or skipped using the 'enabled' parameter. If enabled == False, everything else in the step is irrelevant.
## The metashape functions powering each of these steps are listed in the comments in parentheses.
## Refer to Metashape documentation for full parameter definitions: https://www.agisoft.com/pdf/metashape_python_api_1_5_0.pdf
## Parameter names here generally follow the parameter names of the Metashape functions.

### Whether to use image EXIF RTK flags to make image geospatial accuracy more precise
use_rtk: False # Recommended: True
fix_accuracy: 3
nofix_accuracy: 25

# To use GCPs, a 'gcps' folder must exist in the top level photos folder. The contents of the 'gcps' folder are created by the prep_gcps.R script. See readme: https://github.com/ucdavis/metashape

importMarkers:
    enabled: True
    format: Metashape.ReferenceFormatCSV
    delimiter: ','
    rightlim: 23 # Number of the last target on the right side of the flume
    leftlim: 44 # Number of the last target on the left side of the flume

alignPhotos:            # (Metashape: alignPhotos)
    enabled: True
    downscale: 2        # Recommended: 2. (Medium) How much to coarsen the photos when searching for tie points. Higher number for blurrier photos or when there are small surfces that may move between photos (such as leaves). Accepts numbers 2^x (and zero) (https://www.agisoft.com/forum/index.php?topic=11697.0).
    adaptive_fitting: True # Recommended: True. Should the camera lens model be fit at the same time as aligning photos?
    preselectionMode: Metashape.ReferencePreselectionSource # Choose preselection mode for photo match: [ReferencePreselectionSource, ReferencePreselectionEstimated, ReferencePreselectionSequential]

optimizeCameras:        # (Metashape: optimizeCameras)
    enabled: True
    adaptive_fitting: True # Recommended: True. Should the camera lens model be fit at the same time as optinizing photos?

buildDenseCloud:        # (Metashape: buildDepthMaps, buildDenseCloud, classifyGroundPoints, and exportPoints)
    enabled: True
    ## For depth maps (buldDepthMaps)
    downscale: 2        # Recommended: 2. (High) How much to coarsen the photos when searching for matches to build the dense cloud. For large photosets, values < 4 likely take prohibitively long. Accepts numbers 2^x (https://www.agisoft.com/forum/index.php?topic=11697.0).
    filter_mode: Metashape.MildFiltering # Recommended: Metashape.MildFiltering. How to filter the point cloud. Options are NoFiltering, MildFiltering, ModerateFiltering, AggressiveFiltering. Aggressive filtering removes detail and makes worse DEMs (at least for forest). NoFiltering takes very long. In trials, it never completed.
    reuse_depth: False  # Recommended: False. Purpose unknown.
    ## For dense cloud (buildDenseCloud)
    keep_depth: False   # Recommended: False. Purpose unknown.
    ## For both
    max_neighbors: 100  # Recommended: 100. Maximum number of neighboring photos to use for estimating point cloud. Higher numbers may increase accuracy but dramatically increase processing time.
    ## For ground point classification (classifyGroundPoints). Definitions here: https://www.agisoft.com/forum/index.php?topic=9328.0
    classify: False     # Must be enabled if a digital terrain model (DTM) is needed either for orthomosaic or DTM export
    max_angle: 15.0     # Recommended: 15.0
    max_distance: 1.0   # Recommended: 1.0
    cell_size: 50.0     # Recommended: 50.0
    ## For dense cloud export (exportPoints)
    export: False       # Whether to export dense cloud file.
    format: Metashape.PointsFormatLAS # Recommended: PointsFormatLAS. The file format to export points in.
    classes: "ALL"      # Recommended: "ALL". Point classes to export. Must be a list. Or can set to "ALL" to use all points. An example of a specific class is: Metashape.PointClass.Ground

buildDem: # (Metashape: buildDem, exportRaster)
    enabled: True
    ## For building DEM (buildDem)
    type: "DSM"        # Recommended: "both". Options: "DSM" or "DTM" or "both". Type of DEM to exporot (digital surface model, digital terrain model, or both).
    ## For exporting DEM (exportRaster)
    export: True        # Whether to export DEM(s)
    tiff_big: True      # Recommended: True. Use BigTIFF format? Required for larger projects with large DEMs
    tiff_tiled: False   # Recommended: False. Use tiled TIFF? This is related to internal file architecture.
    nodata: -32767      # Recommended: -32767. Value used to represent nodata.
    tiff_overviews: True # Recommended: True. Include coarse-scale raster data in file for quick display in GIS.
    clip_to_boundary: False # Exporting DEMs and Orthophotos only within a defined shape or not.
    boundaryMode: "Shape" # "Markers" or "Shape". Outer boundary made with markers or by a given shape previously defined (in *.shp format).
    

buildOrthomosaic: # (Metashape: buildOrthomosaic, exportRaster)
    enabled: True
    ## For building orthomosaic (buildOrthomosaic)
    surface: "DSM"         # Recommended: "DSM" (assuming a USGS DEM is available and GCPs with accurate elvevation data are being used). The surface to build the orthomosaic onto. "DTM", "DSM", "USGS", or "DTMandDSM. DTM and DSM refer to elevation models built by Metashape (buildDem step above) and stored in the project. If USGS, you must use GCPs with accurate elevations (ideally extracted from the USGS DEM).
    blending: Metashape.MosaicBlending # Recommended: Metashape.MosaicBlending. Photo blending mode. Options include AverageBlending, MosaicBlending, MinBlending, MaxBlending, DisabledBlending
    fill_holes: True        # Recommended: True. Fill holes in orthomosaic where no photo data exist by interpolating?
    refine_seamlines: True  # Recommended: True. Use smart algorithm to identify photo seamlines where they will least distort.
    ## For exporting orthomosaic (exportRaster)
    export: True            # Whether to export orthomosaic
    tiff_big: True          # Recommended: True. Use BigTIFF format? Required for larger projects with large DEMs
    tiff_tiled: False       # Recommended: False. Use tiled TIFF? This is related to internal file architecture.
    nodata: -32767          # Recommended: -32767. Value used to represent nodata.
    tiff_overviews: True    # Recommended: True. Include coarse-scale raster data in file for quick display in GIS.
    resolution: 0.001
